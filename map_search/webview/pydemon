#!/usr/bin/python
#
# use to run python program forever
# @author becxer
# @email becxer87@gmail.com
#
import signal
import sys
import subprocess
import time
import os
import datetime
 
sleep_time = 1
bashCmd = ""
now_time = 1000
last_time = 1001
run_count = 0
pydemon_log = '.pydemon.log'

if len(sys.argv) == 1:
	print 'usage : ./pydemon "bash command" or your-script.sh'
	exit()

def set_bashCmd():
	global bashCmd
	bashCmd = ""
	for i in range(len(sys.argv)):
		if i > 0 :
			if os.path.isfile(sys.argv[1]) and ('.sh' in sys.argv[1]):
				f = open(sys.argv[1],"r")
				bashCmd = f.read()
				f.close()
				break
			bashCmd += sys.argv[i] + " "

def set_now_time(path):
	global now_time
	dirs = os.listdir(path)
	for f in dirs:
		fnow = path+'/'+f
		if os.path.isdir(fnow) :
			set_now_time(fnow)
		elif os.path.getmtime(fnow) > now_time:
			now_time = os.path.getmtime(fnow)

def run_cmd(bashCmd):
	global run_count
	run_count += 1
	print "[#"+str(run_count)+"]---------------------------"
	print str(bashCmd)
	print "[stdout]----------------------"
	process = subprocess.Popen(bashCmd, shell=True 
				,stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	res = ''
	while True:
		output = process.stdout.readline()
		if output == '' and process.poll() is not None:
			break
		if output:
			res += output
			print output.strip()
		rc = process.poll()
	output, error = process.communicate()
	print "[stderr]----------------------"
	res += error
	print error
	if process.returncode != 0 :
		print "[ERROR] process error"
	print "pydemon is watching your directory..."
	return res

while True:
	if last_time != now_time :
		set_bashCmd()
		logf = open(pydemon_log,"a")
		logf.write("[#"+str(run_count)+" pydemon log] :: "
					+str(datetime.datetime.now())+"\n")
		logf.write(run_cmd(bashCmd))
		logf.close()
		set_now_time('./')
		last_time = now_time
	else :	
		set_now_time('./')	
	time.sleep(sleep_time)
